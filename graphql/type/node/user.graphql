# import Node, Role from "../interface.graphql"

### Base User, can connect to multiple admins and accounts
type User implements Node {
    id: ID!
    username: String!
    email: String!
    isActive: Boolean!
    roles: [Role]!
    timeCreated: String!
    session: Session
    authHeader: String
}

type Session {
    _id: ID!
    browser: String!
    ip: String!
    key: String!
    lastActive: String
    os: String!
    userId: String!
    timeCreated: String 
}

type Role {
    type: String!
    node: Node!
}

### Admin records, belong to groups and have permissions
type AdminGroup implements Node {
    id: ID!
    name: String!
}

type Admin implements Node {
    id: ID!
    groups: [AdminGroup]!
    first: String!
    middle: String
    last: String
    user: User
    timeCreated: String!
}

### Account Records, Have status and note from admin
type AccountStatus implements Node {
    id: ID!
    name: String
    pivot: String
}

type AccountNote {
    data: String!
    createdBy: Admin!
    timeCreated: String!
}

type Account implements Node {
    id: ID!
    notes: [AccountNote]
    currentStatus: AccountStatus!
    statusLog: [AccountStatus]!
    first: String!
    middle: String
    last: String
    user: User
    timeCreated: String!
}